<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="product">
	<select id='tot_size' parameterType="bean.Page" resultType="Integer">
		select count(s.code) from sales s left join parts p
		on s.code=p.code
		where s.code like '%${findStr}%' 
		or p.codeName like '%${findStr}%' 
		or s.nal like '%${findStr}%' 
	</select>

	<select id='select' parameterType="bean.Page" resultType="product.ProductVo">
		select * from sales s left join parts p
		on s.code=p.code 
		where s.code like '%${findStr}%' 
		or p.codeName like '%${findStr}%' 
		or s.nal like '%${findStr}%' 
		order by s.sno asc, p.codeName
		limit ${startNo}, ${listSize}	
	</select>

	<select id='view' parameterType="int" resultType="product.ProductVo">
		select * from sales s left join parts p
		on s.code = p.code
		where s.sno=#{_parameter}
	</select>
	
	<insert id='insert' parameterType="product.ProductVo" >
		insert into sales( code, nal, ea, price, amt) 
		values( #{code}, #{nal}, #{ea}, #{price}, ea*price)
	</insert>

	<update id='update' parameterType="product.ProductVo" >
		update sales set nal=#{nal}, ea=${ea}, price=${price}, amt=${amt}
		where sno = #{sno}
	</update>
	
	<delete id='delete' parameterType="Integer">
		delete from sales where sno=#{_parameter}
	</delete>
	
	
	<select id='find_code'  parameterType="String" resultType="parts.PartsVo">
		select * from parts
		where code like  '%${findStr}%' 
		or    codeName like '%${findStr}%' 
		or    spec like  '%${findStr}%'
	</select>
</mapper>












